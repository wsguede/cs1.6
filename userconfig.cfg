name "{ ( x_X ) }"
unbindall

// Reload this
bind "F11" "exec userconfig.cfg"

// Menus
bind "ESCAPE" "cancelselect"
bind "1" "slot1"
bind "2" "slot2"
bind "3" "slot3"
bind "4" "slot4"
bind "5" "slot5"
bind "6" "slot6"
bind "7" "slot7"
bind "8" "slot8"
bind "9" "slot9"
bind "0" "slot0"

// Movement
bind "a" "+moveleft"
bind "d" "+moveright"
bind "s" "+back"
bind "w" "+forward"

// Actions
bind "q" "usePrim"
bind "e" "+use"
bind "g" "drop"
bind "n" "nvgs; wait; wait; nightvision; impulse 100"
bind "t" "impulse 201" // Spray
bind "r" "+reload"
bind "ctrl" "+duck_dynamic"
bind "SPACE" "+jump2"
bind "m" "chooseteam"
bind "h" "+commandmenu"

// Buy stuff
bind "." "primammo; hegren; secammo; flash; flash; defuser; usePrim"
bind "F3" "m4a1; ak47; primammo; deagle; secammo; usePrim"
bind "F4" "aug; sg552; primammo; deagle; secammo; usePrim"
bind "F5" "mp5; primammo; deagle; secammo; usePrim"
bind "F6" "m3; primammo; deagle; secammo; usePrim"

// Attack
bind "MOUSE1" "+attack"
bind "MOUSE2" "+attack2"
bind "MOUSE3" "say_team /me"
bind "MOUSE4" "+throwHE"
bind "MOUSE5" "+throwSM"

bind "=" "volup"
bind "-" "voldown"
bind "tab" "+score_graph"
bind "ctrl" "+duck_dynamic"

// Speak
bind "z" "radio1"
bind "x" "radio2"
bind "c" "radio3"
bind "y" "messagemode"
bind "u" "messagemode2"
bind "[" "say_team obj"
bind "]" "say inside"
bind "\" "say walls"

bind "h" "+commandmenu"
bind "n" "nvgs; wait; wait; nightvision"
bind "m" "chooseteam"

////////////////////////////////////////////////////////////////////////////////
// ALIASES
////////////////////////////////////////////////////////////////////////////////


alias usePrim "slot2; wait; wait; slot1; bind q useSec"
alias useSec "slot1; wait; wait; slot2; bind q usePrim"
alias useGren "weapon_knife; weapon_smokegrenade; weapon_flashbang; weapon_hegrenade"

// Throw grens
alias +throwHE "weapon_knife; weapon_hegrenade; wait; wait; +attack;"
alias -throwHE "-attack;"
alias +throwSM "weapon_knife; weapon_flashbang; weapon_smokegrenade; wait; wait; +attack;"
alias -throwSM "-attack;"

// Show net graph when displaying scores
alias +score_graph "+score; net_graph 1; bind tab -score_graph"
alias -score_graph "-score; net_graph 0; bind tab +score_graph"

// Use dynamic crosshair when duck
alias "+duck_dynamic" "+duck; cl_dynamiccrosshair 1"
alias "-duck_dynamic" "-duck; cl_dynamiccrosshair 0"

// jump + use for parachute servers
alias +jump2 "+jump; +use"
alias -jump2 "-use; -jump"

// Change volume level
alias v0 "volume 0.00; echo Volume 00% (__________); alias volup v1; alias voldown v0"
alias v1 "volume 0.02; echo Volume 10% (|_________); alias volup v2; alias voldown v0; speak minimum"
alias v2 "volume 0.05; echo Volume 20% (_|________); alias volup v3; alias voldown v1"
alias v3 "volume 0.08; echo Volume 30% (__|_______); alias volup v4; alias voldown v2"
alias v4 "volume 0.10; echo Volume 40% (___|______); alias volup v5; alias voldown v3"
alias v5 "volume 0.13; echo Volume 50% (____|_____); alias volup v6; alias voldown v4"
alias v6 "volume 0.15; echo Volume 60% (_____|____); alias volup v7; alias voldown v5"
alias v7 "volume 0.18; echo Volume 70% (______|___); alias volup v8; alias voldown v6"
alias v8 "volume 0.20; echo Volume 80% (_______|__); alias volup v9; alias voldown v7"
alias v9 "volume 0.22; echo Volume 90% (________|_); alias volup v10; alias voldown v8"
alias v10 "volume 0.25; echo Volume 100% (_________|); alias volup v10; alias voldown v9; speak maximum"
alias volup v6
alias voldown v1

////////////////////////////////////////////////////////////////////////////////
// CONNECTION
////////////////////////////////////////////////////////////////////////////////

clientport         27005 // [27005:Int] Sets the port that the client connects to the server through.
cl_allowdownload   1 // [1:Bool] Allow maps, models, sounds, sprites, textures download when connecting to a server.
cl_allowupload     1 // [1:Bool] Allow the upload of your custom spray when connecting to a server.
cl_dlmax           9999 // [128:Int](16-1024) Cl_dlmax determines the fragment size for chunks of player decals, etc. that are downloaded while playing the game. Clamped to 16 to 1024 bytes. Useful to try and limit decals from taking up a lot of bandwidth this made a lot more sense back when everyone was on 14.4 kbps modems.
cl_download_ingame 1 // [1:Bool] Enables the download of players custom sprays while playing.
cl_fixtimerate     7.5 // [7.5:Float] Cl_fixtimerate is the # of msec per frame of clock drift fixup. Since the server is sending timestamps in every packet, but we only read networking once per frame, we don't want to just accept the server clock, so we use it as a target and correct toward it by the fixtimerate (unless the delta becomes too large and we snap the client to the server clock).
cl_lc              1 // [1:Bool] This is called "server-side hit computation and lag compensation".This only works if the server is allowing lag compensation (sv_unlag 1) and if the firing player is requesting lag compensation (cl_lc 1 - note that the player must also be predicting weapon firing client-side, too, or cl_lc is ignored). Don't change this. See also cl_lw.
cl_lw              1 // [1:Bool] This is called "client-side weapon firing prediction".What this refers to is the instantaneous set of effects that occur when the fire button is pressed. These effects are all done client-side if client-side weapon firing prediction is enabled (cl_lw is 1). The effects include: starting the weapon firing animation, showing any muzzle flash, creating any ejected shells, drawing decals and bullet puffs at the impact spot on the wall of the level, starting the weapon firing sound, etc. However, the actual determination of whether the shot (for hit-scan weapons at least) hit another player is now and always has been done at the server. If this is disabled, Lag Compensation is also disabled. See cl_lc.
cl_nosmooth        0 // [0:Bool] It defines if the prediction errors will be smoothly corrected over the cl_smoothtime time. If set to 1, the prediction error smoothing is disabled (same with cl_smoothime 0).
cl_resend          6 // [6:Float](1.5-20) Delay in seconds before the client will resend the 'connect' attempt. This is when you have problem connecting to server and when you see : "Retrying connection to server #1". And this hasn't anything to do with netcode like people originally though.
cl_slist           10 // [10:Int] This is how many seconds to wait max for responses when doing a LAN slist ping. Responses coming in later than that are ignored.
cl_smoothtime      0.1 // [0.1:Float] It defines the amount of time the view will be smoothly correct after a prediction error. If we set cl_smoothtime to 0 (or cl_nosmooth to 1), our interpolation wont be 'smoothed' or corrected and we will see the actual position of the players. Note that this will cause a jump in the players movements, but they will be correct.
cl_solid_players   0 // [1:Bool] Whether the movement prediction engine should treat other players as solid.
cl_timeout         100 // [300:Int] When you are inactive, it's after how many seconds the server disconnect you. This is also controled by sv_timeout (server side)
cl_upspeed         320 // [20:Int] It's the number of updates per second you are requesting from the server.
fs_lazy_precache   0 // [0:Bool] Normally this toggle is disabled which in turn enables the game to load all of the necessary sound files for that specific map before the game starts. If this toggle is enabled the game will not preload the sound files during the start of the map, instead the sound files will only be loaded when they are necessary. The sound files will stay in memory after they are loaded in order to increase performance of the game by not having to reload the same sound files from the hard drive every time that the sound file is used.
hpk_maxsize        0.0001 // [1.5:Float] Defines the maximum size of custom.hpk in your cstrike folder, custom.hpk is used to store other players logos in. It's value is in MB, a value of 0 means no maximum size.
cl_cmdbackup       2 // [2:Int] In addition, with each command packets(cl_cmdrate), we re-send the last few previous movement commands ( in case there is packet loss ) so that we can keep moving smoothly in the face of minor network problems. The default number of "backup" commands that we send is 2, but you can change this number by setting cl_cmdbackup to another number. You can send more than 8 backup commands and you should note that sending backup commands will increase your outgoing bandwidth usage.
cl_cmdrate         101 // [30:Int](min. 10) This is the maximum of command packets you will send to the server per second. The default is to send up to 30 command packets per second up to the server. If you are running faster than 30 frames per second, then multiple commands will be put into some packets. You can change the rate of sending command packets to the server by setting the cl_cmdrate cvar.
cl_updaterate      101 // [20:Int](10-102) It's the number of updates per second you are requesting from the server.
//cl_rate            20000 // [9999:Int](1000-20000) This is how many bytes per seconds the client send to the server. Note: It's a command but it works like a cvar, except that sometimes it doesn't work if you try setting it in your cfg.
rate               100000 // [20000:Int](1000-100000  ) This is how many bytes per seconds the server send to the client. For internet games only (sv_lan 0), except if sv_lan_rate < 1001 on a LAN game (sv_lan 1).
ex_interp          0 // [0.1:Float](0.009-0.1) ex_interp sets the amount of time (in seconds) to interpolate in between each successive update(cl_updaterate).Set this variable to 0 and nothing else. Counter-Strike will automatically set your ex_interp to 1/cl_updaterate (i.e. your console will say: "ex_interp forced up to xx msec"). This is because the time in between each packet is exactly 1/(the # of updates per second), so this is how long you want your client to interpolate.
fakelag            0 // [0:Int] Simulates lag when the value is higher than 0. Higher value is more lag.
fakeloss           0 // [0:Int] Simulates loss when the value is higher than 0. Higher value is more loss, sv_cheats must be enabled for this to work.

////////////////////////////////////////////////////////////////////////////////
// SPECTATOR
////////////////////////////////////////////////////////////////////////////////

spec_autodirector          1 // [1:Bool] It enables Auto Director spectator mode.Auto Director automatically moves the camera depending of where the player is looking at.This is working for Free Chase Cam, Locked Chase Cam & Chase Map Overview. (Same as spec_autodirector_internal for CS, CZ & DoD).
spec_autodirector_internal 1 // [1:Bool] It enables Auto Director spectator mode.Auto Director automatically moves the camera depending of where the player is looking at.This is working for Free Chase Cam, Locked Chase Cam & Chase Map Overview. spec_autodirector (cmd) toggles this CVar. This is only in CS, CZ & DoD.
spec_drawcone              1 // [1:Bool] Toggles 90-degree orange view cone on overview mode that show where you are looking in spec mode (Same as spec_drawcone_internal for CS, CZ & DoD).
spec_drawcone_internal     1 // [1:Bool] Toggles 90-degree orange view cone on overview mode that show where you are looking in spec mode. spec_drawcone (cmd) toggles this CVar. This is only in CS, CZ & DoD.
spec_drawnames             1 // [1:Bool] Toggles drawing names on overview mode (Same as spec_drawnames_internal for CS, CZ & DoD).
spec_drawnames_internal    1 // [1:Bool] Toggles drawing names on overview mode. spec_drawnames (cmd) toggles this CVar. This is only in CS, CZ & DoD.
spec_drawstatus            1 // [1:Bool] Toggles the game informations (Current map, game time, ...) which show at the top right of your screen in spectator mode (Same as spec_drawstatus_internal for CS, CZ & DoD).
spec_drawstatus_internal   1 // [1:Bool] Toggles the game informations (Current map, game time, ...) which show at the top right of your screen in spectator mode. This is only CS, CZ & DoD and it no longer works in those games since Steam.
spec_mode                  4 // [1:Int](1-6) Changing this during you play doesn't have any effect. You have to change it before you enter a server. It sets the first spectator mode you have when you enter in spectator mode (when you are dead or you are spectator). This is
spec_mode_internal         4 // [1:Int](1-6) Changing this during you play doesn't have any effect. You have to change it before you enter a server. It sets the first spectator mode you have when you enter in spectator mode (when you are dead or you are spectator). This is automatically changed when you change your spectator mode with the JUMP key, the spec menu or the spec_mode command. (1 = Locked Chase Cam, 2 = Free Chase Cam, 3 = Free Look, 4 = First Person, 5 = Free Map Overview, 6 = Chase Map Overview)
spec_pip                   0 // [5:Int](0-5) Sets the picture-in-picture spectator mode. (0 = Disabled, 1 = Player Chase Cam, 2 = First Person, 3 = Chase Map Overview (Zoomed out), 4 = Chase Map Overview (Zoomed in), 5 = Buggy mode (You see view cone sprites + player view sprites like on the map overview, but it works in third person etc...))
spec_scoreboard            0 // [0:Bool] Toggles the scoreboard on/off. "togglescores" (command) toggles this CVar. This is a spec CVar but you don't need to be spectator to use it. This is only in CS, CZ & DoD.

////////////////////////////////////////////////////////////////////////////////
// MOVEMENT
////////////////////////////////////////////////////////////////////////////////

cl_anglespeedkey 1 // [0.67:Float] It defines the turning speed ratio with +left/+right while walking (+speed). cl_yawspeed * cl_anglespeedkey = turning speed while walking. By default the turning speed while walking is 140.7(210 * 0.67 = 140.7)
cl_backspeed     400 // [400:Int] Sets the speed using the backward key (+back). This is limited by sv_maxspeed server side. And in CS this is limited by the per weapon speed. This should be equal to cl_forward and cl_sidespeed or you will have problem holding forward and left at the same time for example.
cl_forwardspeed  400 // [400:Int] Sets the speed using the forward key (+forward). This is limited by sv_maxspeed server side. And in CS this is limited by the per weapon speed. This should be equal to cl_backspeed and cl_sidespeed or you will have problem holding forward and left at the same time for example.
cl_movespeedkey  0.4 // [0.52:Float](0-0.52) The speed at which you move when +speed is active.
cl_pitchspeed    225 // [225:Float](50+) This is how fast your view loop up / look down with using the commands +lookup / +lookdown.
cl_sidespeed     400 // [400:Int] Sets the speed using the move left and move right key (+moveleft and +moveright). This is limited by sv_maxspeed server side. And in CS this is limited by the per weapon speed. This should be equal to cl_backspeed and cl_forwardspeed or you will have problem holding forward and left at the same time for example.
cl_yawspeed      210 // [210:Float](0+) Defines turn speed with +left and +right.
joystick         0 // [0:Bool] Enables the use of a joystick.

////////////////////////////////////////////////////////////////////////////////
// INTERFACE
////////////////////////////////////////////////////////////////////////////////

setinfo                  "_vgui_menus" 0 // [?:Str] Enable visual GUI for gun selection.
setinfo                  "lefthand" 0 // [?:Str] Hold gun in left hand.
setinfo                  "_ah" 0 // [?:Str] Enable automatic help.
con_notifytime           4 // [4:Int][0+] The amount of time in seconds developer messages stay in the upper-left before disappear of the screen.
con_color                "255 180 30" // [255 180 30:Str] Sets the color of chat messages. in RGB. In Won (the system before Steam), it was used to change the console text color as well.
_cl_autowepswitch        1 // [1:Bool] Automatically switch to most powerful gun. (When set to 1, when you buy a new gun or run over a gun to pick it up this will automatically switch to that gun) If 0, then your current choice of weaponry will stay selected.
developer                1 // [0:Int](0-2) Enables developer mode. Developer mode can be used to show information on screen and prints advanced informations into console. Developer 2 gives more advanced informations than developer 1.
dev_overview             0 // [0:Bool] It shows the overview map created by the game. Used for mappers, to get overview image.
cl_chasedist             112 // [112:Int] It modifies how far the camera is zoomed out whilst your dead.
cl_clockreset            0.1 // [0.1:Float] If the client clock drifts more than cl_clockreset from the server, we just slam it to use the server and reset the delta to 0 usually occurs at signon to server and maybe if there is a lot of packet loss.
cl_crosshair_color       "50 250 50" // [50 250 50:Str] Defines the color of the crosshair in RGB, the value must be encased in double quotes.
cl_crosshair_size        "small" // [0/auto:String] Defines the size of your crosshair. The different values ar, e = 0 or auto / 1 or small / 2 or medium / 3 or large.
cl_crosshair_translucent 1 // [?:Bool] Enables translucent crosshair.
cl_dynamiccrosshair      0 // [1:Bool] Enables the dynamic crosshair when crouching/jumping...
cl_gaitestimation        1 // [1:Bool] Cl_gaitestimation uses an alternate path for computing the velocity of other players, which is used to drive their lower body (leg) animations. However, cs 1.6 forces it on and the cvar is ignored.
cl_gg                    0 // [0:Bool] If enables, when viewing a demo with using playdemo or viewdemo, it runs the demo in benchmaking mode, quits the game and saves the results in fps.txt file . It's the same as running a demo with gg "demoname".
cl_idealpitchscale       0.8 // [0.8:Float] This was used by a system (mostly for using joysticks) of adjusting the eye pitch angle when walking up/down sloped surfaces. It looks like this used to scale how quickly the pitch converged on the ideal pitch for the slope. This works when lookspring is enabled (mouse look need to be disabled) and when joystick look is enabled. The value is by how many degree the view is adjusted when walking up/down sloped surfaces.
cl_logocolor             "#Valve_Orange" // [#Valve_Orange:Str] It defines the color of your spray: #Valve_Blue, #Valve_Brown, #Valve_Dkgray, #Valve_Ltblue, #Valve_Ltgray, #Valve_Green, #Valve_Orange, #Valve_Red, #Valve_Yellow
cl_logofile              "lambda" // [lambda:Str] It defines which spray you want to use among those: 8ball1, andre, camp1, chick1, chuckskull, devl1, gun1, lambda, skull, smiley, splatt, tiki, v_1
cl_messages              1 // [?:Bool] Display on screen information from console.
cl_needinstanced         0 // [0:Bool] Enabling this will print into the console some infos about the models being loaded(weapon models). You need developer 1 to see the infos. And you need sv_instancedbaseline 1 server side. (This is already 1 by default)
cl_observercrosshair     0 // [1:Bod the maximum view angle to look down. This is locked and can't be changed in CS.
cl_pitchup               89 // [89:Int] Sets the maximum view angle to look up. This is locked and can't be changed in CS.
cl_pmanstats             0 // [0:Bool] It displays on your screen infos about particles. The particles are smokes grenades (maybe there are others things, but I didn't see anything other that could change this particle meter)."Number of particles" is the number of particles that are in the map at the moment."Particles Drawn" is how much particles are drawn on your screen at the moment."CMiniMem Free" is how much memory is availaible for smokes.
cl_radartype             1 // [0:Bool] Enables opaque (non translucent) radar.
cl_righthand             1 // [1:Int](min. -1, max. 1) If it's set to -1, you'll have your guns on left hand and your knife on right hand. If it's set to 0, all weapons are on left hand. If it's set to 1, all weapons are on right hand.
cl_showerror             0 // [0:Bool] Show the Prediction Errors on your screen.
cl_showevents            0 // [0:Bool] Enables showing on events like weapon firing, all events are listed in cstrike/events/.
cl_showfps               0 // [0:Bool] Shows your current FPS in the upper left corner of your screen.
cl_showmessages          0 // [0:Bool] Dump network traffic to console. It needs developer 1 to work.
cl_shownet               0 // [0:Int](0-2) 0 Do not display any information. 1 Print current incoming packet size in byte. 2 Print information about the current in coming packet and it's size.
cl_waterdist             4 // [4:Int] It compensates the view along the surface of water.
fs_perf_warnings         0 // [0:Bool] Controls printing of warnings about texture resampling. It needs developer to be 1 (On).
fs_precache_timings      0 // [0:Bool] Perf printouts about sound and model loading. It needs developer to be 1 (On).
fs_startup_timings       0 // [0:Bool] Controls a bunch of console spew about timings at startup time for the engine. It needs developer to be 1 (On).
//mp_autocrosshair         0 // [0:Bool] If sv_aim is 1, this enables the red crosshair in multiplayer.
cl_minmodels             1 // [0:Bool] Enable displaying of only the minimum models: leet.mdl, gign.mdl and vip.mdl, enabling may improve performance.
cl_min_t                 8 // [1:Int] Chose specific player model for Terrorists. (1/3 = ELITE (Leet), 5 = GUERILLA, 6 = ARCTIC, 8 = PHOENIX (Terror), 11 = MILITIA (CZ only)) See: http://cs.gamebanana.com/skins/97004
cl_min_ct                9 // [2:Int] Chose specific player model for CT. (2 = GIGN, 4 = GSG-9, 7 = SAS, 9 = SEAL, 10 = SPETSNAZ (CZ only)) See: http://cs.gamebanana.com/skins/97004

////////////////////////////////////////////////////////////////////////////////
// NETCODE
////////////////////////////////////////////////////////////////////////////////

// Net Graph.
net_graph         3 // [0:Int](0-3) Enables the use of a net_graph. It displays information about your settings, ping, fps, etc. dependent on the type of net graph. (0 = Hidden, 1 = FPS, 2 = Ping, 3 = Packets)
net_graphpos      2 // [?:Int](0-2) Sets the position of net_graph. (0 - Left, 1 - Center, 2 - Right)
net_graphwidth    120 // [192:Int] Sets the width of net_graph. Higher number is wider net_graph.
graphheight       90 // [64:Int] Sets the height of net_graph.

cl_vsmoothing     0.05 // [0.05:Float](0.0+) This is called "View smoothing", enables interpolation between view vectors. It smooths/interpolates the view origin and angles when riding trains/plats. 0.05 should be good(if you have above 20 fps) and 0 disables it so it should increase your fps.
cl_weaponlistfix  0 // [0:Bool] It was to fix a bug in the original HL1 code related to the WeaponList usermessage the message would just be ignored if this was set
net_scale         5 // [5:Int] Sets the amount of bytes shown per pixel in net_graph.
net_showdrop      0 // [0:Bool] Shows a message in console when a packet is dropped. This is for both client and server.
net_showpackets   0 // [0:Bool] Shows incoming/outgoing packets. This is for both client and server.
cl_filterstuffcmd 0 // [0:Bool] Restrict how much the server is allowed to change in your config

////////////////////////////////////////////////////////////////////////////////
// MOUSE
////////////////////////////////////////////////////////////////////////////////

m_filter               0 // [0:Bool] Toggles mouse filter. Mouse filter smooths out mouse movements.
m_forward              1 // [1:Float](0-1) It defines how fast you move forward/backward while moving your mouse. It Needs Mouse Look disabled to move forward/backward with your mouse. (requires -mlook)
m_pitch                0.022 // [0.022:Float] Sets the sensitivity ratio of up and down mouse movements. Negative numbers causes inverted mouse movements. This can't be changed except from the options menu with "Reverted Mouse" who sets m_pitch to -0.022.
m_side                 0.8 // [0.8:Float] It defines how fast you strafe while moving your mouse. It Needs lookstrafe 1 and Mouse Look Enabled(+mlook) to strafe with your mouse.
m_yaw                  0.022 // [0.022:Float] Sets the sensitivity ratio of left and right mouse movements. Negative numbers causes inverted mouse movements.
m_rawinput             0 // [0:Bool]
sensitivity            3 // [3:Float](1-20) Sets the sensitivity of the mouse.
zoom_sensitivity_ratio 1 // [1.2:Float] Defines the sensitivity ratio when zooming.
lookspring             0 // [0:Bool] Enables automatic view centering when Mouse Look is disabled (-mlook). It should be set during mouse look is enabled(+mlook). It also disable the up and down mouse movements.
lookstrafe             0 // [0:Bool] When enabled, the left/right mouse movements make you strafe instead of turn.
v_centermove           0.150 // [0.150:Float](0+) Sets the distance to walk before your view centers when -mlook and lookspring 1 are active.
v_centerspeed          500 // [500:Int] It defines how fast your crosshair is centered at the middle of your screen when having mouse look disabled(-mlook) and lookspring 1.

////////////////////////////////////////////////////////////////////////////////
// VIDEO
////////////////////////////////////////////////////////////////////////////////

cl_bob               0 // [0.01:Float](0-1) Sets the amount that the view bobs while the player is running.
cl_bobcycle          0 // [0.8:Float] Sets how frequent the player's view bobs while running. I would recommend leaving this at the default value, since it messes up your hands since an update(it's like zooming on them). Before this update it messed up your crosshair. Has no effect when cl_bob is 0.
cl_bobup             0 // [0.5:Float] Sets the amount the player bobs up while running. Has no effect when cl_bob is 0.
cl_corpsestay        600 // [600:Int] Time in seconds before dead bodies dissapears from the ground.
//cl_fog_b           0 // [0:Int](0-255) It sets the fog color blue value. Fog can be enabled with gl_fog 1. By default, this CVar is hidden and you need to add -dev to the game command line for this cvar to work. The only official map that have fog is de_inferno_cz. Map authors can add fog in their maps with the env_fog entity which auto set this CVar.
//cl_fog_density     0 // [0:Float] It sets the density of the fog. Fog can be enabled with gl_fog 1. By default, this CVar is hidden and you need to add -dev to the game command line for this cvar to work. The only official map that have fog is de_inferno_cz. Map authors can add fog in their maps with the env_fog entity which auto set this CVar. A good value is 0.0003.
//cl_fog_g           0 // [0:Int](0-255) It sets the fog color green value. Fog can be enabled with gl_fog 1. By default, this CVar is hidden and you need to add -dev to the game command line for this cvar to work. The only official map that have fog is de_inferno_cz. Map authors can add fog in their maps with the env_fog entity which auto set this CVar.
//cl_fog_r           0 // [0:Int](0-255) It sets the fog color red value. Fog can be enabled with gl_fog 1. By default, this CVar is hidden and you need to add -dev to the game command line for this cvar to work. The only official map that have fog is de_inferno_cz. Map authors can add fog in their maps with the env_fog entity which auto set this CVar.
cl_himodels          0 // [?:Bool] Enables the High Quality models. This only works in Half-Life.
cl_shadows           1 // [1:Bool] Enables player shadows (small black circle), disable to improve performance.
cl_weather           0 // [1:Int](0-3) Enables rain on de_aztec, 1 will cause a few rain drops, 2 will increase them, and 3 will cause a downpour.Disables it to improve performance.
direct               0.9 // [0.9:Float](0.75-1) Determines scaling of ambient/direct lighting on studio models.
crosshair            1 // [1:Bool] Enables the red dot at the middle of awp/scout/g3sg1/sg550 crosshairs.
ati_npatch           0 // [1:Bool] Enables ATI's TRUform technology, this will result in higher quality models but will decrease performance.
//ati_subdiv         0 // [2:Int](0-7) This is the ATI TRUform level, the higher you go (with ati_npatch set to 1) the more polygons are added to the models to smooth them out.
bottomcolor          0 // [0:Int](0-255) Sets the bottom color of your model in Half-Life that others see.
brightness           1 // [1:Int](0-2) Sets the brightness value.
d_spriteskip         2 // [0:Bool]
fastsprites          0 // [1:Int](0-2) Defines quality of smokepuffs, 0 being the best and 2 being the worst. Set to lower quality to improve performance.
fps_max              99.55 // [72:Float](20-1000) Set the maximum frames per second. You can only have over 100 if developer is 1 (on).
fps_override         0 // [0:Bool]
gamma                3 // [2.5:Float](1.8-3) Sets the gamma value.
hud_capturemouse     1 // [1:Bool] If disabled, there is no mouse cursor in the command menu. This doesn't work in CS 1.6 and DoD 1.3 because the command menu no longer accept number binds. But this still work in HL, TFC and some others mods.
hud_centerid         1 // [0:Bool] Toggles whether the player names are shown in the lower left corner or in the middle of the screen. Player name is shown when your aiming at another player.
//hud_classautokill    1 // [1:Bool] If enabled, automatically kill yourself after choosing a new player class in TFC.
hud_deathnotice_time 6 // [6:Int] Sets the amount of seconds death notices are shown.
hud_draw             1 // [1:Bool] Enables drawing of the HUD.
hud_drawhistory_time 5 // [5:Int] Sets the ammount of seconds HUD icons are shown. For example buy icons.
hud_fastswitch       1 // [0:Int](0-2) Toggles fast weapon switch. If on, then weapons switch immediately, when you press a number key(They must be bound to slotX commands). This has no effect when you're scrolling through your weapons(using invprev and invnext). 0 means no fast switch, 1 means switch on both number keys and mouse wheel, 2 means on do fast switch when using number keys
hud_saytext          1 // [1:Bool] It enables the in-game chat (Same as hud_saytext_internal for CS, CZ & DoD).
hud_saytext_internal 1 // [1:Bool] It enables the in-game chat. hud_saytext (cmd) toggles this CVar. This is only in CS, CZ & DoD.
hud_saytext_time     5 // [5:Int] Sets the amount of seconds chat messages are shown.
hud_takesshots       0 // [0:Bool] Enables taking snapshots at the end of maps.
//d_mipcap             0 // [0:Int](0-3) It sets a maximum quality for all textures, close or far.0 High texture detail.1 Medium texture detail.2 Low texture detail.3 Minimum texture detail.
d_spriteskip         0 // [0:Bool] It enables fast sprites rendering. It will skip rendering every N scanlines.
cl_mousegrab         0 // [1:?]
gl_ansio             0 // [16:Int]
gl_affinemodels      0 // [0:Bool] Applies opengl perspective correction hints: e.g.: glHint (GL_PERSPECTIVE_CORRECTION_HINT, GL_NICEST);
gl_alphamin          0.25 // [0.25:Float] This controls how filtering of alpha-masked textures (gratings, fences, screen-door stuff) affects the appearance of edges. Higher values makes these items (i.e. the gratings,fences,etc.) look "skinnier", 1 makes them absolutely disappear.
gl_clear             0 // [0:Bool] If you enable gl_clear, it will clear the color-buffer. Basically, this means that when the camera can see into the void, either because of the map extending past the farclip plane or there is some kind of corruption of the map data. This is often used as a debugging tool as the 'gl_clear' color is red. It's used by Mappers to see if there are leaks in their maps. It seems that in D3D, it turns everything to red even if you are not outside the map.
gl_cull              1 // [1:Bool] Enables opengl GL_CULL_FACE setting.
gl_dither            1 // [1:Bool] 6 bit OpenGL rendering can use a form of dithering where the lack of colour depth is hidden by rounding different ways depending on the pixel being drawn. Setting to 0 can theoretically be faster or less hideous. Then again, it could look more bland. It depends on personal preference. It seems that at 32 bit it don't have effect on walls but only on sky.
gl_flipmatrix        0 // [0:Bool] It's a fix for your crosshair if you are using 3dfx drivers (Old video cards, example: Voodoo, Voodoo2, Rush or Banshee.) Maybe in CS 1.6 you can't even use 3dfx servers since there is no option like in 1.5 to enable it. If you use that with others drivers you'll get your AWP/Scout crosshair buggued.
gl_fog               1 // [1:Bool] Turn On/Off the fog effect. This was made for CZ and not for 1.6 but it can work in 1.6. It only works in de_inferno_cz. But with this you can get a colored map (or make it work in all maps) : You must have -dev in the launch parameters and set cl_fog_density to 1 + cl_fog_r/cl_fog_r/cl_fog_g (those control the color).
gl_keeptjunctions    1 // [1:Bool] Keep collinear points added by QCSG/QBSP to fix T-junctions. If you set it to 0 you will see cracks between some textures.
gl_lightholes        1 // [1:Bool] Controls whether to apply lighting to surfaces with holes (not sure if this still actually works).
gl_max_size          128 // [512:Int](64, 128, 256, 512) The maximum pixel size which textures are loaded in. The value must be a multiple of 16 to prevent white textures, when a texture is larger than gl_max_size it will be cropped into that size, if that size isn't a multiple of 16 it will become a white texture. Although gl_max_size has no maximum value, a value of 512 is the most realistic maximum value of gl_max_size.
gl_monolights        0 // [0:Bool] Create uniform light source, no shadows. (Can also be called FullBright). When a grenade explode in a area or you turn on your flashlight, the gamma of this area will go back to normal
//gl_nobind            0 // [0:Bool] Toggles the replacement of textures with alphanumeric characters. Obsolete, not working in 1.6.
//gl_nocolors          0 // [0:Bool] Don't bind separately colored textures for players. Obsolete and not supported.
gl_overbright        0 // [0:Bool] Saturated lighting. Makes lighting more natural and realistic.
gl_palette_tex       1 // [0:Bool] Enable/disable support for paletted textures. If the GL driver you're using doesn't support the extension, this won't make any difference. But some cards support the extension poorly and support must be disabled using this variable.
gl_picmip            0 // [0:Int](0-3) Sets the rendering quality - * higher the number is faster but lower qualityDon't set it over 3 or cs will crash.
gl_polyoffset        0.1 // [0.1:Float](-0.001 to 25) Amount of offset to apply to decals on polygons.
gl_round_down        4 // [3:Int](0-5) This is the textures accuracy or the textures rounding. When textures need to be resized they are rounded up or down depending of this. Setting it to a low value SHOULD make the textures rendered more accurately and setting it to a high value SHOULD make the textures accuracy worse. I say "SHOULD" because it can depend of video card. The max value SHOULD be 5 but again it can depend of video card.
gl_spriteblend       1 // [1:Bool] It enabled alpha-blending on sprites. It's like the rendering quality to the sprites (gl_spriteblend 0 = bad quality), blood n stuffs.(0=more blood)
gl_wateramp          0 // [0.3:Float] It amplifies the water's waves (in maps with water of course). This cvar can only be changed by sv_wateramp(Server Side).
//gl_wireframe         0 // [0:Int](0-3) gl_wireframe 1 does the former, placing glowing lines on each face that the engine is drawing which show how it is being split up. gl_wireframe 2 does the same thing, but the lines it creates can be seen through walls, thus allowing you to tell how much of the map is being drawn (including other areas that maybe should not be drawn!).gl_wireframe 1, then, is good for seeing how faces are being split etc. gl_wireframe 2 is best for seeing if your VIS blockers are actually working and stopping other areas from being drawn.This is used by mappers to see what is calculated to improve the performances of their maps.
gl_ztrick_old        0 // [0:Bool] (Befote gl_ztrick) Z-buffer half range, but no clears (saves fill rate). Enabling this might cause distant objects to flicker. If you want more fps, enable this.
gl_zmax              6500 // [4096:Int] Sets max zbuffer size. This the max viewable distance. Setting it to 0 in D3D renderer makes you see through walls. Since people was cheating with it, VALVe added a protection and this cvar can now only be changed with sv_zmax ( Server Side ).
gl_vsync             0 // [1:Bool] Vertical sync.
//gl_d3dflip           0 // [0:Bool] This CVar have only a effect in D3D mode. It enable reversed rendering order. With nVidia Detonator 53.03 and gl_d3dflip 0, you can get a WH.If you are having mouse lags problems in D3D( most of time in smokes ), you can try gl_d3dflip 1, it will reduce the lag or fix it.
lambert              1.5 // [1.5:Float] Sets the lambert level. Lambert is the player models lighting.
lightgamma           2.5 // [2.5:Float](1.9-2.5) Sets the in game lightgamma. It has a protection to be forced to 2.5 when connecting to a server, but it's like a "broken" protection because the gamma is set before the protection is set, so you can still change this before connecting to a server. When a grenade explode in a area or you turn on your flashlight, the gamma of this area will go back to normal. If changed, it might crash the game. **Paft edit: Actually, yes, 0 used to be lowest and now crashes the game, but 1.9 is the new low.**
max_shells           1 // [120:Int] Maximum number of shells which can go out of all other player's weapon's at one time.
max_smokepuffs       1 // [120:Int] Maximum number of smoke puffs that go out the smoke grenades and your bullets (on the wall) at one time.
mp_decals            100 // [300:Int] It sets the maximum decals (Spray logo, bullet holes, grenade scorch, blood on ground) VISIBLE on the screen. It has to be set before connection to server. It's not the same as r_decals.
r_bmodelinterp       1 // [1:Bool] Controls whether moving brush models interpolate their positions (smooths presentation).
r_cachestudio        1 // [1:Bool] Determines whether to cache studio model hulls for quicker tests the cache has a limited size/lifespan. This is a perf optimization.
r_cullsequencebox    1 // [1:Bool] In multiplayer, if set then instead of just testing of bbox is on back side of viewer, we check the entire frustum for the current animations extents (sequence box).
// r_bmodelhighfrac    5.0 // [5.0:Float]
r_decals             100 // [4096:Int] It sets the decals (Spray logo, bullet holes, grenade scorch, blood on ground) limit. If higher than mp_decals, it will be set to mp_decals value (It's reset to mp_decals value when connecting to server). It's not the same as mp_decals.
r_detailtextures     0 // [0:Bool] Turn on/off Detailed Textures. In cs 1.6 by default there are detailed textures only for Cobble.
r_drawentities       1 // [1:Int] Controls drawing of entities/models.0 = no entities1 = Default and draws entities normally2 = entities drawn as skeletons3 = entities drawn each bone having a bounding box4 = entities drawn with box5 = individual box for player and weapon NOTE: works only in SOFTWARE-mode D3D/OpenGL : Single Player OnlySoftWare : Multi Player
r_drawviewmodel      1 // [1:Bool] Toggle the view of the weapon model.
r_dynamic            0 // [1:Bool] Dynamic lighting is when lighted objects create projections on the walls or objects around them(example: rockets in half-life). You will gain performance by disabling this. But since a HL update it's locked to 1 in multi-player.
r_fullbright         0 // [0:Int] Setting this to 1 means no lightmaps and would render all textures without any dynamic shadings/lighting (so what you get are brightly lit textures, so much so that even the flashlight's beam is invisible).Setting to "2" would mean only lightmaps (all models are gouraud-shaded minus textures).NOTE : THE PARTICULAR VALUES ARE NOT FOR OPENGL, ONLY FOR SOFTWARE MODE.Okay, this might be useful for mappers.Setting to "3" means only lightmaps but with offset grid.Setting to "4" is like "3" but would also show the mip level of each surface relative to the player.
r_glowshellfreq      2.2 // [2.2:Float] It sets the glowing frequency of player models. Player models are glowed by server plugins. For example the respawn protection in deathmatch.
r_lightmap           0 // [0:Int] I only get a effect with this cvar in D3D and Software:D3D: r_lightmap -1 or 1 = White Walls.Software:r_lightmap 1 = Remove all the lights of the map, what you just see is the sky.
r_mirroralpha        0 // [1:Bool] Mirror reflection effect. Obsolete and not supported.
r_mmx                1 // [0:Bool] This turns on the MMX optimizations. MMX is autodetected (1 = on, 0 = off), but you can force it on or off with this.
r_norefresh          0 // [0:Bool] Disables the refreshing of the world and HUD.
r_novis              0 // [0:Bool] First you have to know what is VIS:VIS is short for Visible Information Set. This generates what can and can't be seen from certain locations in the map. Half-Life will then use this information when running the game to help speed up rendering, by only drawing what the player can see.If r_novis is 1 (enabled), it would disable the VIS and would calculate everything in the map like the player can see everything. You can try with gl_wireframe 2 to see the effect.
r_speeds             0 // [0:Bool] Used by mappers to see the epoly and wpoly value for map performances.
r_traceglow          0 // [0:Bool] Turns on the occlusion calculations. If enabled, light halos (made by env_glow entity) and some explosions sprites won't be seen through AI Players (hostages in CS, scientists and monsters in HL) when behind them.
r_wadtextures        0 // [0:Bool] r_wadtextures is used for enabling wether or not to allow included wad textures.
r_wateralpha         1 // [1:Bool] r_wateralpha 1 enables water alpha-blending(the default). To disable it (0), r_novis must be on. Disabling would allow you to see, from above water, everything beneath the surface of water (which in effect renders the water surface absolutely transparent.) This doesn't work with Half-Life 1 Engine. To get transparent water, mappers have to use the func_water entity.
violence_ablood      1 // [1:Bool] Toggles alien's blood.
violence_agibs       1 // [1:Bool] Toggles alien's gibs.
violence_hblood      1 // [1:Bool] Toggles human's blood.
violence_hgibs       1 // [1:Bool] Toggles human's gibs.
scr_ofsx             0 // [0:Int] This sets your view origin offset on the X axis.
scr_ofsy             0 // [0:Int] This sets your view origin offset on the Y axis.
scr_ofsz             0 // [0:Int] This sets your view origin offset on the Z axis.
texgamma             2.0 // [2.0:Float] Sets the texture gamma amount.
topcolor             30 // [0:Int](2-255) Sets the top color of your model in Half-Life that others see.
viewsize             120 // [120:Int](30-120) It sets the size of your in-game screen in software mode.
v_dark               0 // [0:Bool] Setting this to 1 causes the level to fade in from black upon initial load.

////////////////////////////////////////////////////////////////////////////////
// SOUND
////////////////////////////////////////////////////////////////////////////////

s_show               0 // [0:Bool] Shows on screen what sounds are played.
_snd_mixahead        0.1 // [0.1:Float] Sets the time (in seconds) to mix the sound that much ahead. Should only be used with severe performance problems. If your sound is skipping or cracking, you may need to change this.
bgmvolume            0 // [1:Bool] When disabled, it pauses the current sound which is being played with "mp3" or "cd" command. To unpause, just reenable.
hisound              1 // [1:Bool] Toggles high quality sound. (1 = 22kHz, 0 = 11kHz)
MP3FadeTime          2 // [2:Int] This is how much seconds a mp3 will take to fade completely out using the "cd fadeout" command.
MP3Volume            0 // [0.8:Float] Sets the Mp3's volume level.
//s_verbwet            0.25 // [0.8:Float]
suitvolume           0.25 // [0.25:Float] Sets the volume of the HEV suit sounds in Half-Life.
volume               0.1 // [0.2:Float] Sets the sound's volume level.
room_type            0 // [0:Int] Mappers use this to make echos in their map, this is changed automatically when the player enters in a zone with the env_sound entity. Different values: 0 = Normal (off)1 = Generic2 = Metal Small3 = Metal Medium4 = Metal Large5 = Tunnel Small6 = Tunnel Medium7 = Tunnel Large8 = Chamber Small9 = Chamber Medium 10 = Chamber Large11 = Bright Small12 = Bright Medium13 = Bright Large14 = Water 115 = Water 216 = Water 317 = Concrete Small18 = Concrete Medium19 = Concrete Large 20 = Big 121 = Big 222 = Big 323 = Cavern Small24 = Cavern Medium25 = Cavern Large26 = Weirdo 127 = Weirdo 228 = Weirdo 3
room_off             1 // [0:Bool] Disable room_type echo.
loadas8bit           0 // [0:Bool] Toggles the use of 8 bit sound, which is lowest quality. On = 8 Bit. Off = 16 Bit.
nosound              0 // [0:Bool] Should disable all sound, except for certain sounds like the footstep sound when a bullet ricochets.
snd_noextraupdate    1 // [0:Bool] If enabled, disallows "extra" sound updates which can occur during rendering or other potentially slow framerate situations.
waterroom_type       14 // [14:Int](0-28) Sets the room_type under water, for type descriptions, see room_type. Set to 0 for clean sound under water.
//bgmbuffer            4096 // [4096:Int] Sets the allocated memory for CD/MP3 music in kB.
//s_a3d                0 // [0:Bool] Enable A3D sound technology. Your sound card need to support it.
//s_eax                1 // [0:Bool] Enables EAX sound technology. Your sound card need to support it.
//s_automax_distance   30
//s_automin_distance   2
//s_bloat              2.0
//s_distance           60
//s_doppler            0.0
//s_leafnum            0
//s_max_distance       1000
//s_min_distance       5
//s_numpolys           200
//s_polykeep           1000000000
//s_polysize           10000000
//s_refdelay           4
//s_refgain            0.4
//s_reverb             0
//s_rolloff            1
speak_enabled        1 // [1:Bool] If set to 0 then the "spk" and "speak" commands are disabled.

////////////////////////////////////////////////////////////////////////////////
// VOICE
////////////////////////////////////////////////////////////////////////////////

voice_dsound         1
voice_enable         1 // [1:Bool] Enables voice communication through microphone.
voice_fadeouttime    1 // [0.1:Float] The amount in seconds a player's voice fades out at the end of saying something on the microphone. This is so the transition to when they stop talking sounds smoother. Put this at 0 if you want to play sounds using HLSS/HLDJ, since this makes the music fade and sound muffled after a song has been playing continuously.
voice_forcemicrecord 1 // [1:Bool] It sets the recording device to Wave Out Mix, instead of Line 1/Mic.The HL engine tries to make sure the mixer control settings are set properly when the game runs, but not all soundcards work the same way, especially very high-end sound cards like Audigy 2ZS pro cards. If you are having problems with your mic not working after you start a game, try setting this to 0.
voice_inputfromfile  0 // [0:Bool] When set to one and you use +voicerecord, this will not record your voice but rather play a WAV file from your cstrike/voice_input.wav.
voice_modenable      0 // [0:Bool] Enable voice in game.
voice_loopback       0 // [0:Bool] When enables it and talk on your microphone, this loops back your own voice so you can hear yourself talk.
voice_scale          1 // [1:Float] This set how loud are the voices of the others players when they talk (also your voice if you use voice_loopback).

////////////////////////////////////////////////////////////////////////////////
// SERVER
////////////////////////////////////////////////////////////////////////////////

mp_freezetime 0 // [6:Int] The length in seconds of the Freeze period at the beginning of rounds. Set to 0 to disable.

////////////////////////////////////////////////////////////////////////////////
// OTHER
////////////////////////////////////////////////////////////////////////////////

+mlook
+jlook

speak code.deployed


echo "custom config completed"
